/* This script creates a weekly timeline into newly created columns as headers given start date, end date, and calculated number of weeks between dates 
*
* Google Sheet Pre-requisites:
* start date, end date, and calculated number of weeks between dates in separate cells
* google drawing button
*
*/



function timelineGenerator (){ // creates weekly timeline on Financials sheet
  //Setting cells to grab week numbers, endDate, and sheet name
  
  var numWeeksCell = "V2";   //CHANGE to cell that holds number of weeks
  var endDateCell = "U3";   //CHANGE to cell that holds end date
  var spreadSheetName = "Sheet1";  //CHANGE to sheet name

  var sh1 = SpreadsheetApp.getActiveSpreadsheet().getSheetByName(spreadSheetName)
  var numWeeks = sh1.getRange(numWeeksCell).getValue();

  var endDate = sh1.getRange(endDateCell).getValue();

  var endDate = new Date(sh1.getRange(endDateCell).getValue());
  var newDate = new Date();

  // creates first column 
  
  //CHANGE number in insertColumnBefore function to determine where to start adding in new columns
  sh1.insertColumnBefore(25);
  
  //CHANGE numbers in gerRange to place new dates
  sh1.getRange(1,26).setValue(endDate);
  
  //CHANGE number in setTextRotation function to set text orientation 
  sh1.getRange(1,26).setTextRotation(90);
  
  //CHANGE number in setColumnWidth function to set column width
  sh1.setColumnWidth(26,33);
  sh1.getRange(2,26,1,1 ).setValue(numWeeks).setFontColor("black"); // CHANGE "black" to any color font (name of color or hex code as strings) 

  //calculates starting day of week before endDate
  //creates subsequent weeks and columns
  for (i = 0; i < numWeeks; i++){
    newDate = subWeeks(endDate); // subtracting endDate by 7 days
    endDate = newDate; // set new date into new columns
    
    //CHANGE number in insertColumnBefore function to determine where to start adding in new columns
    sh1.insertColumnBefore(25);
    
    //CHANGE numbers in gerRange to place new dates
    sh1.getRange(1,26 ).setValue(newDate);
    
    //CHANGE number in setTextRotation function to set text orientation 
    sh1.getRange(1,26 ).setTextRotation(90);
    
    //CHANGE number in setColumnWidth function to set column width
    sh1.setColumnWidth(26,33);
    sh1.getRange(2,26,1,1).setValue(numWeeks - (i+1)).setFontColor("black"); // CHANGE "black" to any color font (name of color or hex code as strings) 
  
  }
  
  //addSumFormula(); // insert sum formula to timeline rows
  
}

function subWeeks (endDate){ // substract endDate by 7 days
  var newWeek = new Date(endDate.getFullYear(),endDate.getMonth(),endDate.getDate() - 7);
  return newWeek;
}


function getColumnLetters(columnIndexStartFromOne) { // convert column numbers into letters
  const ALPHABETS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']

  if (columnIndexStartFromOne < 27) {
    return ALPHABETS[columnIndexStartFromOne - 1]
  } else {
    var res = columnIndexStartFromOne % 26
    var div = Math.floor(columnIndexStartFromOne / 26)
    if (res === 0) {
      div = div - 1
      res = 26
    }
    return getColumnLetters(div) + ALPHABETS[res - 1]
  }
}

